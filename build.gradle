buildscript {
    ext {
        // Using 1.3.0 milestone for newer spring-data-jpa version
        springBootVersion = '1.3.0.M5'
    }
    repositories {
        mavenCentral()
        maven {
            url 'http://repo.spring.io/milestone'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'events'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'http://repo.spring.io/milestone'
    }
}

configurations {
    // We're using Jetty instead
    compile.exclude module: "spring-boot-starter-tomcat"
    // We're using HikariCP instead
    compile.exclude module: "tomcat-jdbc"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-mail")
    // For future use
    //compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("com.zaxxer:HikariCP")

    compile("com.google.guava:guava:18.0")
    compile("org.webjars.bower:wisvch-bootstrap-theme:0.0.3")
    compile("org.webjars:jquery:2.1.4")

    runtime("org.hsqldb:hsqldb")
    runtime("org.postgresql:postgresql")

    testCompile("org.springframework.boot:spring-boot-starter-test") 
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
